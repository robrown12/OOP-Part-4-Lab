class Animal {
    private String name;

    public Animal(String name) {
        this.name = name;
    }

    public String makeSound() {
        return "Roar!";
    }

    public String displayInfo() {
        return "My favorite animal is a " + name;
    }
}

class Dog extends Animal {
    private String breed;

    public Dog(String name, String breed) {
        super(name);
        this.breed = breed;
    }

    @Override
    public String makeSound() {
        return "Woof!";
    }

    @Override
    public String displayInfo() {
        // Using super to call the parent class method
        String baseInfo = super.displayInfo();
        return baseInfo + " and I am a " + breed + " dog";
    }
}

class Fish extends Animal {
    private String color;

    public Fish (String name, String color) {
        super(name);
        this.color = color;
    }

    @Override
    public String makeSound() {
        return "!";
    }

    @Override
    public String displayInfo() {
        // Using super to call the parent class method
        String baseInfo = super.displayInfo();
        return baseInfo + " and I have " + color + " tail";
    }
}

public class Main {
    public static void main(String[] args) {
        Animal genericAnimal = new Animal("Lion");
        System.out.println(genericAnimal.displayInfo());
        System.out.println(genericAnimal.makeSound());

        Dog myDog = new Dog("Milo", "Pit Bull");
        System.out.println(myDog.displayInfo());
        System.out.println(myDog.makeSound());

        Fish myFish = new Fish("Fish", "Red striped");
        System.out.println(myFish.displayInfo());
        System.out.println(myFish.makeSound());
    }
}
